#version 330 core

out vec4 brickColour;

in vec2 TexCoord;

void main ()
{
  const float PI = 3.1415926535897932384626433832795;

	const float star_ka = 1.0;
	const float star_kd = 1.0;
	const vec3 star_colour = vec3(1.0, 0.5161, 0.0);
	const float star_npoints = 5;
	const float star_sctr = 0.5;
	const float star_tctr = 0.5;
	
	//vec3 Nf = normalize(faceforward(N, I));
	vec3 Ct;
	float ss, tt, angle, r, a, in_out;
	float s = TexCoord.x;
	float t = TexCoord.y;
	float rmin = 0.1;
	float rmax = 0.2;
	float starangle = 2.0 * PI / star_npoints;
	vec3 p0 = rmax * vec3(cos(0.0), sin(0.0), 0);
	vec3 pi = rmin * vec3(cos(starangle/2.0), sin(starangle/2.0), 0);
	vec3 d0 = pi - p0;
	vec3 d1;
	ss = s - star_sctr;
	tt = t - star_tctr;
	angle = atan(ss, tt) + PI;
	r = sqrt(ss*ss + tt*tt);
	
	a = mod(angle, starangle) / starangle;
	if(a >= 0.5)
	{
		a = 1.0 - a;
	}
	
	d1 = r * (vec3(cos(a), sin(a), 0)) - p0;
	in_out = step(0.0, dot(d0,d1));
	vec3 Cs = vec3(0.5, 0.5, 0.5);
	Ct = mix(Cs, star_colour, in_out);

	brickColour = vec4(Ct, 1.0);
}